import type { Metadata } from "next";
import "./globals.css";
import "./style.css";
import "./embla-carousel.css";
import "./rtl.css";
import HeaderStyle1 from "./components/header/styles/headerStyle1";
import FooterStyle1 from "./components/footer/styles/footerStyle1";
import Marquee from "./components/marquee";
import FooterNav from "./components/footer/footerNav";
import ReduxProvider from "./components/ReduxProvider";
import CartInitializer from "./components/cart/CartInitializer";
import { Toaster } from "react-hot-toast";
import { Suspense } from "react";
import { NextIntlClientProvider } from 'next-intl';
import { getMessages, getLocale } from 'next-intl/server';
import HeaderTopBar from "./components/header/headerTopBar";
import ThemeScript from "./components/ThemeScript";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const messages = await getMessages();
  const locale = await getLocale();
  const isRTL = locale === 'ar';
  
  return (
    <html dir={isRTL ? 'rtl' : 'ltr'} lang={locale} suppressHydrationWarning>
      <head>
        <ThemeScript />
      </head>
      <body
        className={`relative font-inter antialiased bg-white min-h-screen dark:bg-gray-900 flex flex-col ${isRTL ? 'rtl' : 'ltr'}`}
      >
        <NextIntlClientProvider messages={messages}>
          <ReduxProvider>
            <div className="flex flex-col min-h-screen">
              <CartInitializer />
              <Suspense fallback={<div className="h-8 bg-primary-500"></div>}>
                <Marquee/>
                <HeaderTopBar />  
              </Suspense>
              <HeaderStyle1 />
              <main className="flex-1 pb-16 lg:pb-0">
                {children}
              </main>
              <FooterStyle1 />
            </div>
            <FooterNav />
          </ReduxProvider>
          <Toaster position="top-center" /> 
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
